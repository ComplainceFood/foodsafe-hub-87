
import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';
import AutoGeneratedCAPA from './AutoGeneratedCAPA';
import CAPAAuditIntegration from './CAPAAuditIntegration';
import { toast } from 'sonner';
import { AlertCircle, Brain, CheckCircle2, FileWarning, GitBranch, Settings, Zap } from 'lucide-react';
import { Switch } from '@/components/ui/switch';
import { Label } from '@/components/ui/label';
import CreateCAPADialog from './CreateCAPADialog';

// Mock data for demo purposes
const mockAuditFinding = {
  id: 'AF-2023-095',
  title: 'Sanitation verification swab results show recurring issues in packaging area',
  description: 'Swab results from the past 3 weeks show increasing levels of Listeria indicators in the packaging area despite regular sanitation procedures.',
  source: 'audit' as const,
  sourceId: 'AUDIT-2023-14',
  date: '2023-11-10',
  severity: 'critical'
};

const mockHACCPDeviation = {
  id: 'CCP-DEV-2023-042',
  title: 'Temperature deviation in Cold Storage Room 3',
  description: 'Temperature logs show Cold Storage Room 3 exceeded critical limit of 4Â°C for 3.5 hours due to malfunctioning cooling system.',
  source: 'haccp' as const,
  sourceId: 'CCP-TEMP-03',
  date: '2023-11-18',
  severity: 'major'
};

const mockComplaint = {
  id: 'COMP-2023-078',
  title: 'Foreign material found in product batch A2023112',
  description: 'Customer reported finding a 1cm plastic fragment in packaged product from batch A2023112.',
  source: 'complaint' as const,
  sourceId: 'COMP-2023-078',
  date: '2023-11-15',
  severity: 'critical'
};

// Root cause suggestions based on historical data
const rootCauseSuggestions = [
  {
    finding: 'AF-2023-095',
    suggestions: [
      { text: 'Inadequate sanitizer concentration', confidence: 0.87 },
      { text: 'Improper cleaning procedure sequence', confidence: 0.76 },
      { text: 'Biofilm formation in hard-to-clean areas', confidence: 0.72 }
    ]
  },
  {
    finding: 'CCP-DEV-2023-042',
    suggestions: [
      { text: 'Defective compressor in cooling system', confidence: 0.91 },
      { text: 'Improper door sealing allowing temperature loss', confidence: 0.82 },
      { text: 'Overloading of storage room beyond capacity', confidence: 0.65 }
    ]
  }
];

interface AutomatedCAPAGeneratorProps {
  onCAPACreated?: (data: any) => void;
}

const AutomatedCAPAGenerator: React.FC<AutomatedCAPAGeneratorProps> = ({ onCAPACreated }) => {
  const [activeTab, setActiveTab] = useState('pending');
  const [automationEnabled, setAutomationEnabled] = useState(true);
  const [aiAssistEnabled, setAIAssistEnabled] = useState(true);
  
  // In a real implementation, this would be dynamic based on API data
  const pendingItemsCount = 3;
  
  const handleCAPAAccepted = (data: any) => {
    if (onCAPACreated) {
      onCAPACreated(data);
    }
    toast.success(`Auto-generated CAPA created successfully`);
  };

  const handleReject = () => {
    toast.info("Auto-generated CAPA suggestion rejected");
  };

  return (
    <Card className="w-full">
      <CardHeader>
        <div className="flex justify-between items-start">
          <div>
            <CardTitle className="text-xl flex items-center">
              <Zap className="h-5 w-5 mr-2 text-amber-500" />
              Automated CAPA Generation
            </CardTitle>
            <CardDescription>
              System-detected issues requiring corrective actions
            </CardDescription>
          </div>
          <div className="flex items-center space-x-4">
            <div className="flex items-center space-x-2">
              <Switch 
                id="automation-mode" 
                checked={automationEnabled} 
                onCheckedChange={setAutomationEnabled}
              />
              <Label htmlFor="automation-mode">Auto-Detection</Label>
            </div>
            <div className="flex items-center space-x-2">
              <Switch 
                id="ai-assist" 
                checked={aiAssistEnabled} 
                onCheckedChange={setAIAssistEnabled}
              />
              <Label htmlFor="ai-assist">AI Assist</Label>
            </div>
            <Button variant="outline" size="icon">
              <Settings className="h-4 w-4" />
            </Button>
          </div>
        </div>
      </CardHeader>
      <CardContent className="space-y-4">
        {!automationEnabled && (
          <Alert>
            <AlertCircle className="h-4 w-4" />
            <AlertTitle>Automation Disabled</AlertTitle>
            <AlertDescription>
              Automated CAPA generation is currently disabled. Enable it to automatically detect and suggest CAPAs from critical findings.
            </AlertDescription>
          </Alert>
        )}
        
        <Tabs defaultValue={activeTab} onValueChange={setActiveTab}>
          <TabsList className="w-full border-b pb-0">
            <TabsTrigger value="pending" className="flex items-center">
              Pending Review
              {pendingItemsCount > 0 && (
                <Badge className="ml-2 bg-red-100 text-red-800 hover:bg-red-100">
                  {pendingItemsCount}
                </Badge>
              )}
            </TabsTrigger>
            <TabsTrigger value="processed">
              Processed
            </TabsTrigger>
            <TabsTrigger value="settings">
              Configuration
            </TabsTrigger>
          </TabsList>
          
          <TabsContent value="pending" className="pt-4 space-y-6">
            <div className="space-y-6">
              <AutoGeneratedCAPA 
                sourceData={mockAuditFinding} 
                onAccept={handleCAPAAccepted}
                onReject={handleReject}
              />
              
              <AutoGeneratedCAPA 
                sourceData={mockHACCPDeviation} 
                onAccept={handleCAPAAccepted}
                onReject={handleReject}
              />
              
              <AutoGeneratedCAPA 
                sourceData={mockComplaint} 
                onAccept={handleCAPAAccepted}
                onReject={handleReject}
              />
            </div>
          </TabsContent>
          
          <TabsContent value="processed" className="pt-4">
            <div className="border rounded-md p-8 text-center bg-gray-50">
              <CheckCircle2 className="h-12 w-12 mx-auto text-gray-400 mb-4" />
              <h3 className="text-lg font-medium text-gray-700">No Recently Processed Items</h3>
              <p className="text-gray-500 mt-2">
                Processed automation items will appear here for reference
              </p>
            </div>
          </TabsContent>
          
          <TabsContent value="settings" className="pt-4 space-y-4">
            <Card>
              <CardHeader>
                <CardTitle className="text-base flex items-center">
                  <GitBranch className="h-5 w-5 mr-2 text-blue-600" />
                  Automation Triggers
                </CardTitle>
                <CardDescription>
                  Configure when the system should automatically generate CAPA recommendations
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div className="flex items-center justify-between p-3 border rounded-md">
                    <div>
                      <Label className="text-sm font-medium">Critical Audit Findings</Label>
                      <p className="text-xs text-gray-500">Automatically generate for all critical findings</p>
                    </div>
                    <Switch defaultChecked />
                  </div>
                  
                  <div className="flex items-center justify-between p-3 border rounded-md">
                    <div>
                      <Label className="text-sm font-medium">HACCP CCP Deviations</Label>
                      <p className="text-xs text-gray-500">Create CAPAs when critical limits are exceeded</p>
                    </div>
                    <Switch defaultChecked />
                  </div>
                  
                  <div className="flex items-center justify-between p-3 border rounded-md">
                    <div>
                      <Label className="text-sm font-medium">Critical Customer Complaints</Label>
                      <p className="text-xs text-gray-500">Generate for food safety related complaints</p>
                    </div>
                    <Switch defaultChecked />
                  </div>
                  
                  <div className="flex items-center justify-between p-3 border rounded-md">
                    <div>
                      <Label className="text-sm font-medium">Supplier Non-Conformances</Label>
                      <p className="text-xs text-gray-500">Create for critical supplier issues</p>
                    </div>
                    <Switch defaultChecked />
                  </div>
                </div>
              </CardContent>
            </Card>
            
            <Card>
              <CardHeader>
                <CardTitle className="text-base flex items-center">
                  <Brain className="h-5 w-5 mr-2 text-purple-600" />
                  AI Assistant Settings
                </CardTitle>
                <CardDescription>
                  Configure how AI assists with CAPA generation and suggestions
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div className="flex items-center justify-between p-3 border rounded-md">
                    <div>
                      <Label className="text-sm font-medium">Root Cause Analysis</Label>
                      <p className="text-xs text-gray-500">AI suggests potential root causes</p>
                    </div>
                    <Switch defaultChecked />
                  </div>
                  
                  <div className="flex items-center justify-between p-3 border rounded-md">
                    <div>
                      <Label className="text-sm font-medium">Corrective Action Suggestions</Label>
                      <p className="text-xs text-gray-500">Recommend actions based on similar past issues</p>
                    </div>
                    <Switch defaultChecked />
                  </div>
                  
                  <div className="flex items-center justify-between p-3 border rounded-md">
                    <div>
                      <Label className="text-sm font-medium">Impact Assessment</Label>
                      <p className="text-xs text-gray-500">AI evaluates potential impact on food safety</p>
                    </div>
                    <Switch defaultChecked />
                  </div>
                  
                  <div className="flex items-center justify-between p-3 border rounded-md">
                    <div>
                      <Label className="text-sm font-medium">Historical Data Mining</Label>
                      <p className="text-xs text-gray-500">Use past CAPAs to improve suggestions</p>
                    </div>
                    <Switch defaultChecked />
                  </div>
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </CardContent>
      <CardFooter className="flex justify-between border-t pt-4">
        <div className="text-sm text-gray-500">
          <p className="flex items-center">
            <FileWarning className="h-4 w-4 mr-2 text-amber-500" />
            System is monitoring for critical issues across all modules
          </p>
        </div>
        
        <CreateCAPADialog 
          onCAPACreated={onCAPACreated}
          trigger={
            <Button>
              Create Manual CAPA
            </Button>
          }
        />
      </CardFooter>
    </Card>
  );
};

export default AutomatedCAPAGenerator;
