
import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';
import AutoGeneratedCAPA from './AutoGeneratedCAPA';
import CAPAAuditIntegration from './CAPAAuditIntegration';
import { useToast } from '@/components/ui/use-toast';
import { AlertCircle, Brain, CheckCircle2, FileWarning, GitBranch, Loader, Settings, Zap } from 'lucide-react';
import { Switch } from '@/components/ui/switch';
import { Label } from '@/components/ui/label';
import CreateCAPADialog from './CreateCAPADialog';
import { getPotentialCAPAs } from '@/services/capaService';

interface AutomatedCAPAGeneratorProps {
  onCAPACreated?: (data: any) => void;
}

const AutomatedCAPAGenerator: React.FC<AutomatedCAPAGeneratorProps> = ({ onCAPACreated }) => {
  const [activeTab, setActiveTab] = useState('pending');
  const [automationEnabled, setAutomationEnabled] = useState(true);
  const [aiAssistEnabled, setAIAssistEnabled] = useState(true);
  const [potentialCAPAs, setPotentialCAPAs] = useState<any[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const { toast } = useToast();
  
  useEffect(() => {
    const loadPotentialCAPAs = async () => {
      try {
        setLoading(true);
        if (automationEnabled) {
          const data = await getPotentialCAPAs();
          setPotentialCAPAs(data);
        }
      } catch (err) {
        console.error('Error loading potential CAPAs:', err);
        setError('Failed to load potential CAPAs');
      } finally {
        setLoading(false);
      }
    };
    
    loadPotentialCAPAs();
  }, [automationEnabled]);
  
  const handleCAPAAccepted = (data: any) => {
    setPotentialCAPAs(prev => prev.filter(item => item.id !== data.sourceId));
    
    if (onCAPACreated) {
      onCAPACreated(data);
    }
    toast({
      title: "Auto-generated CAPA created successfully",
      description: `CAPA ${data.id || ''} has been created based on auto-detection`
    });
  };

  const handleReject = (id: string) => {
    setPotentialCAPAs(prev => prev.filter(item => item.id !== id));
    toast({
      title: "Auto-generated CAPA suggestion rejected",
      description: "The suggestion has been removed from the list"
    });
  };

  return (
    <Card className="w-full">
      <CardHeader>
        <div className="flex justify-between items-start">
          <div>
            <CardTitle className="text-xl flex items-center">
              <Zap className="h-5 w-5 mr-2 text-amber-500" />
              Automated CAPA Generation
            </CardTitle>
            <CardDescription>
              System-detected issues requiring corrective actions
            </CardDescription>
          </div>
          <div className="flex items-center space-x-4">
            <div className="flex items-center space-x-2">
              <Switch 
                id="automation-mode" 
                checked={automationEnabled} 
                onCheckedChange={setAutomationEnabled}
              />
              <Label htmlFor="automation-mode">Auto-Detection</Label>
            </div>
            <div className="flex items-center space-x-2">
              <Switch 
                id="ai-assist" 
                checked={aiAssistEnabled} 
                onCheckedChange={setAIAssistEnabled}
              />
              <Label htmlFor="ai-assist">AI Assist</Label>
            </div>
            <Button variant="outline" size="icon">
              <Settings className="h-4 w-4" />
            </Button>
          </div>
        </div>
      </CardHeader>
      <CardContent className="space-y-4">
        {!automationEnabled && (
          <Alert>
            <AlertCircle className="h-4 w-4" />
            <AlertTitle>Automation Disabled</AlertTitle>
            <AlertDescription>
              Automated CAPA generation is currently disabled. Enable it to automatically detect and suggest CAPAs from critical findings.
            </AlertDescription>
          </Alert>
        )}
        
        <Tabs defaultValue={activeTab} onValueChange={setActiveTab}>
          <TabsList className="w-full border-b pb-0">
            <TabsTrigger value="pending" className="flex items-center">
              Pending Review
              {potentialCAPAs.length > 0 && (
                <Badge className="ml-2 bg-red-100 text-red-800 hover:bg-red-100">
                  {potentialCAPAs.length}
                </Badge>
              )}
            </TabsTrigger>
            <TabsTrigger value="processed">
              Processed
            </TabsTrigger>
            <TabsTrigger value="settings">
              Configuration
            </TabsTrigger>
          </TabsList>
          
          <TabsContent value="pending" className="pt-4 space-y-6">
            {loading ? (
              <div className="flex justify-center items-center p-8">
                <Loader className="h-8 w-8 animate-spin text-primary" />
                <span className="ml-2">Loading auto-detected issues...</span>
              </div>
            ) : error ? (
              <Alert variant="destructive">
                <AlertCircle className="h-4 w-4" />
                <AlertTitle>Error</AlertTitle>
                <AlertDescription>{error}</AlertDescription>
              </Alert>
            ) : potentialCAPAs.length > 0 ? (
              <div className="space-y-6">
                {potentialCAPAs.map((item) => (
                  <AutoGeneratedCAPA 
                    key={item.id}
                    sourceData={item} 
                    onAccept={handleCAPAAccepted}
                    onReject={() => handleReject(item.id)}
                  />
                ))}
              </div>
            ) : (
              <div className="border rounded-md p-8 text-center bg-gray-50">
                <CheckCircle2 className="h-12 w-12 mx-auto text-gray-400 mb-4" />
                <h3 className="text-lg font-medium text-gray-700">No Issues Detected</h3>
                <p className="text-gray-500 mt-2">
                  No critical issues requiring CAPA have been detected in the system
                </p>
              </div>
            )}
          </TabsContent>
          
          <TabsContent value="processed" className="pt-4">
            <div className="border rounded-md p-8 text-center bg-gray-50">
              <CheckCircle2 className="h-12 w-12 mx-auto text-gray-400 mb-4" />
              <h3 className="text-lg font-medium text-gray-700">No Recently Processed Items</h3>
              <p className="text-gray-500 mt-2">
                Processed automation items will appear here for reference
              </p>
            </div>
          </TabsContent>
          
          <TabsContent value="settings" className="pt-4 space-y-4">
            <Card>
              <CardHeader>
                <CardTitle className="text-base flex items-center">
                  <GitBranch className="h-5 w-5 mr-2 text-blue-600" />
                  Automation Triggers
                </CardTitle>
                <CardDescription>
                  Configure when the system should automatically generate CAPA recommendations
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div className="flex items-center justify-between p-3 border rounded-md">
                    <div>
                      <Label className="text-sm font-medium">Critical Audit Findings</Label>
                      <p className="text-xs text-gray-500">Automatically generate for all critical findings</p>
                    </div>
                    <Switch defaultChecked />
                  </div>
                  
                  <div className="flex items-center justify-between p-3 border rounded-md">
                    <div>
                      <Label className="text-sm font-medium">HACCP CCP Deviations</Label>
                      <p className="text-xs text-gray-500">Create CAPAs when critical limits are exceeded</p>
                    </div>
                    <Switch defaultChecked />
                  </div>
                  
                  <div className="flex items-center justify-between p-3 border rounded-md">
                    <div>
                      <Label className="text-sm font-medium">Critical Customer Complaints</Label>
                      <p className="text-xs text-gray-500">Generate for food safety related complaints</p>
                    </div>
                    <Switch defaultChecked />
                  </div>
                  
                  <div className="flex items-center justify-between p-3 border rounded-md">
                    <div>
                      <Label className="text-sm font-medium">Supplier Non-Conformances</Label>
                      <p className="text-xs text-gray-500">Create for critical supplier issues</p>
                    </div>
                    <Switch defaultChecked />
                  </div>
                </div>
              </CardContent>
            </Card>
            
            <Card>
              <CardHeader>
                <CardTitle className="text-base flex items-center">
                  <Brain className="h-5 w-5 mr-2 text-purple-600" />
                  AI Assistant Settings
                </CardTitle>
                <CardDescription>
                  Configure how AI assists with CAPA generation and suggestions
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div className="flex items-center justify-between p-3 border rounded-md">
                    <div>
                      <Label className="text-sm font-medium">Root Cause Analysis</Label>
                      <p className="text-xs text-gray-500">AI suggests potential root causes</p>
                    </div>
                    <Switch defaultChecked />
                  </div>
                  
                  <div className="flex items-center justify-between p-3 border rounded-md">
                    <div>
                      <Label className="text-sm font-medium">Corrective Action Suggestions</Label>
                      <p className="text-xs text-gray-500">Recommend actions based on similar past issues</p>
                    </div>
                    <Switch defaultChecked />
                  </div>
                  
                  <div className="flex items-center justify-between p-3 border rounded-md">
                    <div>
                      <Label className="text-sm font-medium">Impact Assessment</Label>
                      <p className="text-xs text-gray-500">AI evaluates potential impact on food safety</p>
                    </div>
                    <Switch defaultChecked />
                  </div>
                  
                  <div className="flex items-center justify-between p-3 border rounded-md">
                    <div>
                      <Label className="text-sm font-medium">Historical Data Mining</Label>
                      <p className="text-xs text-gray-500">Use past CAPAs to improve suggestions</p>
                    </div>
                    <Switch defaultChecked />
                  </div>
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </CardContent>
      <CardFooter className="flex justify-between border-t pt-4">
        <div className="text-sm text-gray-500">
          <p className="flex items-center">
            <FileWarning className="h-4 w-4 mr-2 text-amber-500" />
            System is monitoring for critical issues across all modules
          </p>
        </div>
        
        <CreateCAPADialog onCAPACreated={onCAPACreated}>
          <Button>
            Create Manual CAPA
          </Button>
        </CreateCAPADialog>
      </CardFooter>
    </Card>
  );
};

export default AutomatedCAPAGenerator;
